{"version":3,"sources":["components/Nav.js","pages/Demo1.js","components/Toggle.js","pages/Demo2.js","pages/Demo3.js","pages/Demo4.js","pages/Demo5.js","pages/Demo6.js","components/Counter.js","pages/Demo7.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","react_default","a","createElement","react_router_dom","to","Demo1","_useState","useState","_useState2","Object","slicedToArray","name","setName","className","type","onChange","e","target","value","Toggle","isToggled","setToggle","onClick","formSubmit","console","log","concat","Demo2","components_Toggle","onSubmit","preventDefault","Demo3","useEffect","document","title","Demo4","_useTitleInput","initialValue","setValue","useTitleInput","_useTitleInput2","Demo5","dishes","setDishes","fetchDishes","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","sent","json","stop","this","apply","arguments","map","dish","i","key","desc","ingredients","ingredient","k","Demo6","inputEl","useRef","Fragment","ref","current","focus","initialState","count","reducer","state","action","Error","Counter","_useReducer","useReducer","_useReducer2","dispatch","Demo7","components_Counter","App","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0ce62d0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nconst Nav = props => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"demo1\">Demo1</Link>\n        </li>\n        <li>\n          <Link to=\"demo2\">Demo2</Link>\n        </li>\n        <li>\n          <Link to=\"demo3\">Demo3</Link>\n        </li>\n        <li>\n          <Link to=\"demo4\">Demo4</Link>\n        </li>\n        <li>\n          <Link to=\"demo5\">Demo5</Link>\n        </li>\n        <li>\n          <Link to=\"demo6\">Demo6</Link>\n        </li>\n        <li>\n          <Link to=\"demo7\">Demo7</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { useState } from 'react';\n\nconst Demo1 = () => {\n  // const [value, setValue] = useState(initialState);\n  const [name, setName] = useState('');\n\n  return (\n    <div className=\"main-wrapper\">\n      <h1>useState</h1>\n      <h3>{name}</h3>\n      <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name}/>\n    </div>\n  );\n};\n\nexport default Demo1;\n","import React, { useState } from \"react\";\n\nconst Toggle = () => {\n  const [isToggled, setToggle] = useState(false);\n\n  return (\n    <div>\n      <button onClick={() => setToggle(!isToggled)}>Toggle</button>\n      {isToggled && <h2>Hello!</h2>}\n    </div>\n  )\n}\n\nexport default Toggle;\n","import React, { useState } from 'react';\nimport Toggle from '../components/Toggle';\n\nconst Demo2 = () => {\n  // const [value, setValue] = useState(initialState);\n  const [name, setName] = useState('');\n\n  return (\n    <div className=\"main-wrapper\">\n      <h1>useState - FormSubmit & Class refactor</h1>\n      <Toggle />\n      <br />\n      <br />\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          formSubmit(name, setName);\n        }}\n      >\n        <input\n          type=\"text\"\n          onChange={e => setName(e.target.value)}\n          value={name}\n        />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nconst formSubmit = (name, setName) => {\n  console.log(`email sent to ${name}`);\n  setName('');\n};\n\nexport default Demo2;\n","import React, { useState, useEffect } from 'react';\n\nconst Demo3 = () => {\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    document.title = name;\n  });\n\n  return (\n    <div className=\"main-wrapper\">\n      <h1>useEffect</h1>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n        }}\n      >\n        <input\n          type=\"text\"\n          onChange={e => setName(e.target.value)}\n          value={name}\n        />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Demo3;\n","import React, { useState, useEffect } from 'react';\n\nconst Demo4 = () => {\n  const [name, setName] = useTitleInput('');\n\n  return (\n    <div className=\"main-wrapper\">\n      <h1>Custom Hook - useTitleInput</h1>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n        }}\n      >\n        <input\n          type=\"text\"\n          onChange={e => setName(e.target.value)}\n          value={name}\n        />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n\n// TODO move to hooks/useTitleInput.js while in demo\nfunction useTitleInput(initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    document.title = value;\n  });\n\n  return [value, setValue];\n}\n\nexport default Demo4;\n","import React, { useState, useEffect } from 'react';\n\nconst Demo5 = () => {\n  const [dishes, setDishes] = useState([]);\n\n  const fetchDishes = async () => {\n    const res = await fetch(\n      'https://my-json-server.typicode.com/leveluptuts/fakeapi/dishes'\n    );\n    const dishes = await res.json();\n    setDishes(dishes);\n  };\n\n  useEffect(() => {\n    fetchDishes();\n  }, []); // <= Run useEffect only when dishes = [] !\n\n  return (\n    <div className=\"main-wrapper\">\n      <h1>useEffect Fetch</h1>\n      {dishes.map((dish, i) => (\n        <article className=\"dish-card dish-card--withImage\" key={i}>\n          <h3>{dish.name}</h3>\n          <p>{dish.desc}</p>\n          <div className=\"ingredients\">\n            {dish.ingredients.map((ingredient, k) => (\n              <span key={k}>{ingredient}</span>\n            ))}\n          </div>\n        </article>\n      ))}\n    </div>\n  );\n};\n\nexport default Demo5;\n","import React, { useRef } from 'react';\n\nconst Demo6 = () => {\n  const inputEl = useRef(null);\n  const onButtonClick = () => {\n    // `current` points to the mounted text input element\n    inputEl.current.focus();\n  };\n  return (\n    <>\n      <h1>useRef - Focus on input</h1>\n      <input ref={inputEl} type=\"text\" />\n      <button onClick={onButtonClick}>Focus the input</button>\n    </>\n  );\n};\n\nexport default Demo6;\n","import React, { useReducer } from 'react';\n\nconst initialState = { count: 0 };\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return {\n        count: state.count + action.value\n      };\n    case 'minus':\n      return {\n        count: state.count - 1\n      };\n    case 'reset':\n      return {\n        count: initialState.count\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst Counter = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <div>\n      <h3>{state.count}</h3>\n      <button onClick={() => dispatch({type: 'add', value: 10})} >+</button>\n      <button onClick={() => dispatch({type: 'minus'})} >-</button>\n      <button onClick={() => dispatch({type: 'reset'})} >reset</button>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React from 'react';\nimport Counter from '../components/Counter';\n\nconst Demo7 = () => {\n  return (\n    <div className=\"main-wrapper\">\n      <Counter />\n    </div>\n  );\n};\n\nexport default Demo7;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Nav from './components/Nav';\nimport Demo1 from './pages/Demo1';\nimport Demo2 from './pages/Demo2';\nimport Demo3 from './pages/Demo3';\nimport Demo4 from './pages/Demo4';\nimport Demo5 from './pages/Demo5';\nimport Demo6 from './pages/Demo6';\nimport Demo7 from './pages/Demo7';\n\nconst App = props => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" component={Nav} />\n        <Route path=\"react-hooks-demos/demo1\" component={Demo1} />\n        <Route path=\"react-hooks-demos/demo2\" component={Demo2} />\n        <Route path=\"react-hooks-demos/demo3\" component={Demo3} />\n        <Route path=\"react-hooks-demos/demo4\" component={Demo4} />\n        <Route path=\"react-hooks-demos/demo5\" component={Demo5} />\n        <Route path=\"react-hooks-demos/demo6\" component={Demo6} />\n        <Route path=\"react-hooks-demos/demo7\" component={Demo7} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}